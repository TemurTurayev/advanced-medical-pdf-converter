import streamlit as st
import os
import tempfile
from pdf2image import convert_from_path
import pytesseract
import logging
from utils.system_check import verify_system_requirements

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Set page config
st.set_page_config(page_title='–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π PDF –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä', layout='wide')

# Title
st.title('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π PDF –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä')

# System checks
st.header('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')

# Verify system requirements
system_ok, system_message = verify_system_requirements()

# Display results with proper formatting
for line in system_message.split('\n'):
    if '‚úì' in line:  # Check mark
        st.success(line)
    else:
        st.error(line)

if not system_ok:
    st.error('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.')
    st.stop()

# File uploader
st.header('–í—ã–±–µ—Ä–∏—Ç–µ PDF —Ñ–∞–π–ª—ã')
uploaded_files = st.file_uploader('', type=['pdf'], accept_multiple_files=True)

if uploaded_files:
    for uploaded_file in uploaded_files:
        try:
            # Create temporary file
            with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as tmp_file:
                tmp_file.write(uploaded_file.getvalue())
                tmp_path = tmp_file.name

            # Convert PDF to images
            images = convert_from_path(tmp_path)
            
            # Create result file name
            base_name = os.path.splitext(uploaded_file.name)[0]
            result_file = f"{base_name}_—Ä–µ–∑—É–ª—å—Ç–∞—Ç.txt"

            # Process each page
            with st.spinner(f'–û–±—Ä–∞–±–æ—Ç–∫–∞ {uploaded_file.name}...'):
                with open(result_file, 'w', encoding='utf-8') as f:
                    for i, image in enumerate(images):
                        text = pytesseract.image_to_string(image, lang='rus+eng')
                        f.write(f'\n--- –°—Ç—Ä–∞–Ω–∏—Ü–∞ {i+1} ---\n{text}')

            # Success message
            st.success(f'‚úÖ {uploaded_file.name} –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!')

            # Download button
            with open(result_file, 'r', encoding='utf-8') as f:
                st.download_button(
                    label=f"‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {uploaded_file.name}",
                    data=f.read(),
                    file_name=result_file,
                    mime='text/plain'
                )

            # Cleanup
            os.unlink(tmp_path)
            os.unlink(result_file)

        except Exception as e:
            st.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {uploaded_file.name}: {str(e)}')
            logger.error(f'Error processing {uploaded_file.name}: {str(e)}')

    st.success('üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
