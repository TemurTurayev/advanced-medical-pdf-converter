                        for page_num, page_result in enumerate(results['pages'], 1):
                            f.write(f"\n--- –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_num} ---\n")
                            f.write(page_result.get('text', ''))
                    
                    progress = total_progress.get_progress()
                    progress_bar.progress(progress)
                
                details_text.text("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                st.success(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {file_name}")
                
                with open(output_path, 'r', encoding='utf-8') as f:
                    st.download_button(
                        label=f"‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {file_name}",
                        data=f.read(),
                        file_name=f"{base_filename}_—Ä–µ–∑—É–ª—å—Ç–∞—Ç.txt",
                        mime='text/plain'
                    )
                
            except ProcessingError as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_name}: {str(e)}")
            
            except Exception as e:
                st.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_name}: {str(e)}")
            
            finally:
                try:
                    if 'tmp_file' in locals():
                        os.unlink(tmp_file.name)
                    if 'output_path' in locals() and os.path.exists(output_path):
                        os.unlink(output_path)
                except Exception as e:
                    st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {str(e)}")
        
        # Clear progress display
        progress_container.empty()
        st.success("üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()