import streamlit as st
import os
import tempfile
from PIL import Image
from pdf2image import convert_from_path
from typing import List, Dict
from datetime import datetime
import sys
from pathlib import Path
import pytesseract

# Add the project root directory to Python path
root_dir = Path(__file__).parent.parent
sys.path.append(str(root_dir))

from processor import DocumentProcessor

st.set_page_config(
    page_title="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –î–æ–∫—É–º–µ–Ω—Ç –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä",
    page_icon="üè•",
    layout="wide"
)

st.title("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –î–æ–∫—É–º–µ–Ω—Ç –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
with st.expander("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Poppler
    try:
        from pdf2image.pdf2image import get_poppler_path
        if get_poppler_path() is not None:
            st.success("‚úÖ Poppler –Ω–∞–π–¥–µ–Ω")
    except Exception:
        st.error("‚ùå Poppler –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Tesseract
    try:
        pytesseract.get_tesseract_version()
        st.success("‚úÖ Tesseract –Ω–∞–π–¥–µ–Ω")
    except Exception:
        st.error("‚ùå Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ü–û
    missing_software = []
    try:
        import win32com.client
    except ImportError:
        missing_software.append("Microsoft Office")
    
    try:
        import djvu
    except ImportError:
        missing_software.append("DjVuLibre")
    
    if missing_software:
        st.warning("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ü–û:")
        for software in missing_software:
            st.warning(f"‚Ä¢ {software}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
processor = DocumentProcessor()

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
uploaded_files = st.file_uploader(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏",
    accept_multiple_files=True,
    type=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'djvu', 'jpg', 'jpeg', 'png', 'tiff']
)

if uploaded_files:
    for uploaded_file in uploaded_files:
        st.write(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ {uploaded_file.name}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        with tempfile.NamedTemporaryFile(delete=False, suffix=f'.{uploaded_file.name.split(".")[-1]}') as tmp_file:
            tmp_file.write(uploaded_file.getvalue())
            tmp_file_path = tmp_file.name
        
        try:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
            progress_bar = st.progress(0)
            status_text = st.empty()
            
            def update_progress(progress: float, status: str):
                progress_bar.progress(progress)
                status_text.text(status)
            
            with open(tmp_file_path, 'rb') as f:
                file_data = f.read()
                results = processor.process_document(
                    file_data,
                    uploaded_file.name.split('.')[-1].lower(),
                    update_progress
                )
            
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if results and results.get('pages'):
                st.success(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {uploaded_file.name}")
                
                # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                output_text = ""
                for i, page in enumerate(results['pages'], 1):
                    output_text += f"\n--- –°—Ç—Ä–∞–Ω–∏—Ü–∞ {i} ---\n{page['text']}\n"
                
                # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                st.download_button(
                    f"‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {uploaded_file.name}",
                    output_text,
                    file_name=f"converted_{uploaded_file.name}.txt",
                    mime='text/plain'
                )
            
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {uploaded_file.name}: {str(e)}")
        
        finally:
            # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            try:
                os.unlink(tmp_file_path)
            except:
                pass
            
            # –û—á–∏—Å—Ç–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            progress_bar.empty()
            status_text.empty()